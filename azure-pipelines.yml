# Azure pipeline reference: https://aka.ms/yaml

trigger:
- master
- container_build

pr:
- master

strategy:
  matrix:
    windows:
      imageName: 'windows-latest'
    linux:
      imageName: 'ubuntu-latest'

pool:
  vmImage: $(imageName)

steps:
- task: Cache@2
  inputs:
    key: 'docker | "$(Agent.OS)" | Dockerfile_windows | Dockerfile_linux'
    path: $(Pipeline.Workspace)/docker
    cacheHitVar: DOCKER_CACHE_RESTORED
  displayName: Caching Docker image

- pwsh: |
      docker load < $(Pipeline.Workspace)/docker/cache.tar
  condition: and(not(canceled()), eq(variables.DOCKER_CACHE_RESTORED, 'true'))
  displayName: Load Docker image

- pwsh: |
    ./BuildImage.ps1 -ImageName cpp-project-build
    docker save cpp-project-build > $(Pipeline.Workspace)/docker/cache.tar
  condition: and(not(canceled()), or(failed(), ne(variables.DOCKER_CACHE_RESTORED, 'true')))
  displayName: Build Docker image

- pwsh: ./BuildContainerized.ps1
  displayName: Build

- pwsh: cd build && ctest
  displayName: Test