# Azure pipeline reference: https://aka.ms/yaml

trigger:
- master

pr:
- master

parameters:
- name: buildType
  displayName: Native or containerized build
  type: string
  default: native
  values:
  - native
  - container

jobs:
- ${{ if contains(parameters.buildType, 'native') }}:
  - job:
    strategy:
      matrix:
        windows:
          imageName: 'windows-latest'
        linux:
          imageName: 'ubuntu-latest'
    pool:
      vmImage: $(imageName)
    displayName: Build (Native)
    steps:
    - task: Cache@2
      inputs:
        key: 'vcpkg | "$(Agent.OS)"'
        path: $(Build.Repository.LocalPath)/vcpkg
        cacheHitVar: DOCKER_CACHE_RESTORED
      displayName: Caching vcpkg
    - pwsh: ./Bootstrap.ps1
      displayName: Boostrap
      condition: and(not(canceled()), or(failed(), ne(variables.DOCKER_CACHE_RESTORED, 'true')))
    - pwsh: ./Build.ps1
      displayName: Build
    - pwsh: cd build && ctest
      displayName: Test

- ${{ if contains(parameters.buildType, 'container') }}:
  - job:
    strategy:
      matrix:
        windows:
          VMImageName: 'windows-latest'
        linux:
          VMImageName: 'ubuntu-latest'
    pool:
      vmImage: $(VMImageName)
    displayName: Build (Container)
    variables:
    - group: Docker Hub
    - name: dockerImageName
      value: marcusmaximus/cpp-project-build:$(VMImageName)
    steps:
    - pwsh: $env:DOCKERHUB_PASSWORD | docker login --username $env:DOCKERHUB_USERNAME --password-stdin
      displayName: Login to Docker Hub
    - pwsh: docker pull $(dockerImageName)
      displayName: Pull image
    - pwsh: ./BuildImage.ps1 -ImageName $(dockerImageName)
      displayName: Build Docker image
    - pwsh: docker push $(dockerImageName)
      displayName: Push image
    - pwsh: docker logout
      displayName: Logout from Docker Hub
    - pwsh: ./BuildContainerized.ps1 -ImageName $(dockerImageName) -HostSourceDirectory $(Build.SourcesDirectory) -HostBuildDirectory $(Build.BinariesDirectory)
      displayName: Build
    - pwsh: cd $(Build.BinariesDirectory) && ctest
      displayName: Test